//Program 6- Carry look ahead adder
module prog6_carrylookahead_adder(sum, c_4, inpa, inpb, c_0);
input[3:0]inpa,inpb;
input c_0;
output [3:0]sum,c_4;
//propagate and generate used in carry look ahead adder
wire p0, p1, p2, p3, g0, g1, g2, g3;
wire c1, c2, c3, c4;
assign 
p0 = inpa[0]^inpb[0],
p1 = inpa[1]^inpb[1],
p2 = inpa[2]^inpb[2],
p3 = inpa[3]^inpb[3],
g0 = inpa[0]&inpb[0],
g1 = inpa[1]&inpb[1],
g2 = inpa[2]&inpb[2],
g3 = inpa[3]&inpb[3];
assign
c1 = g0|(p0&c_0),
c2 = g1|(p1&g0)|(p1&p0&c_0),
c3 = g2|(p2&g1)|(p2&p1&g0)|(p2&p1&p0&c_0),
c4 = g3|(p3&g2)|(p3&p2&p1&g1)|(p3&p2&p1&g0)|(p3&p2&p1&p0&c_0);
assign
sum[0]=p0^c_0,
sum[1]=p1^c1,
sum[2]=p2^c2,
sum[3]=p3^c3,
c_4 = c4;
endmodule